
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

@import 'primeng/resources/themes/saga-blue/theme.css';
@import 'primeng/resources/primeng.min.css';
@import 'primeicons/primeicons.css';

/* Estilos personalizados para los checkboxes de PrimeNG */
.custom-checkbox .p-checkbox-box {
  color: #FFFFFF !important; /* Cambia el color del ícono */
  border: 2px solid #bababa !important; /* Cambia el color del borde */
  background: #e4e4e4 !important; /* Cambia el color de fondo */
}

.custom-checkbox .p-checkbox-box.p-highlight {
  border: 2px solid #65475C !important; /* Cambia el color del borde */
  background: #AF92A7 !important; /* Cambia el color de fondo cuando está seleccionado */
}

.custom-checkbox .p-checkbox-box.p-highlight .p-checkbox-icon {
  color: #FFFFFF !important; /* Cambia el color del ícono */
}

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$pliel-primary: mat.define-palette(mat.$indigo-palette);
$pliel-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$pliel-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$pliel-theme: mat.define-light-theme((
  color: (
    primary: $pliel-primary,
    accent: $pliel-accent,
    warn: $pliel-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($pliel-theme);

/* You can add global styles to this file, and also import other style files */
@import 'ngx-toastr/toastr';

@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";
@import "../node_modules/font-awesome/css/font-awesome.css";


html, body { height: 100%; }


// ----------------------------------------------------------------------------
// - - - - - - - - - Estilos personalizados para ngx-toastr - - - - - - - - - -
// ----------------------------------------------------------------------------

// Hover effect para los toasts
.toast-success:hover, .toast-error:hover, .toast-info:hover, .toast-warning:hover{
  box-shadow: #AF92A7 5px 5px 10px !important;
}

// Animación para que los toasts entren desde la derecha
.toast-success, .toast-error, .toast-info, .toast-warning {
  animation: slideInFromRight 0.4s ease-in-out;
  box-shadow: #AF92A7 5px 5px 15px !important;
}

// Colores de los bordes superiores de los toasts
.toast-success {
  border-top: 5px solid rgb(0, 116, 0);
}

.toast-error {
  border-top: 5px solid rgb(124, 4, 4);
}

.toast-info {
  border-top: 5px solid rgb(16, 57, 190);
}

.toast-warning {
  border-top: 5px solid rgb(150, 82, 0);
}

// Animación para que los toasts entren desde la derecha
@keyframes slideInFromRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}

